#!/bin/sh

# Slackware build script for <appname>

# Copyright <year> <you> <where you live>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=cloud_music			# replace with name of program
VERSION=${VERSION:-0.9.0}	# replace with version of program
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}		# the "_SBo" is required

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}	# For consistency's sake, use this
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}	# Drop the package in /tmp

set -e # Exit on most errors
# If you prefer to do selective error checking with
#   command || exit 1
# then that's also acceptable.

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
# tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PKG
if [ $ARCH = "i486" ]; then
    ar xvf $CWD/netease-cloud-music_0.9.0-1_i386.deb
else
    ar xvf $CWD/netease-cloud-music_0.9.0-1_amd64.deb
fi
tar xvf data.tar.xz
rm -f control.tar.gz
rm -f data.tar.xz
rm -f debian-binary

# patch for undefiend symbol: g_type_class_adjust_private_offset
mkdir glib_new_version
cd glib_new_version
if [ $ARCH = "i486" ]; then
    tar xvf $CWD/glib2-2.46.2-i586-2.txz
    cp usr/lib/libglib-2.0.so.0.4600.2 ../usr/lib/netease-cloud-music
    cp usr/lib/libgobject-2.0.so.0.4600.2 ../usr/lib/netease-cloud-music
else
    tar xvf $CWD/glib2-2.46.2-x86_64-2.txz
    mkdir -p ../usr/lib64/
    cp usr/lib64/libglib-2.0.so.0.4600.2 ../usr/lib/netease-cloud-music
    cp usr/lib64/libgobject-2.0.so.0.4600.2 ../usr/lib/netease-cloud-music
fi
cd ..
rm -rf glib_new_version
touch usr/lib/netease-cloud-music/cloud_music.sh
echo "#!/bin/sh" > usr/lib/netease-cloud-music/cloud_music.sh
echo "LD_PRELOAD=libglib-2.0.so.0.4600.2:libgobject-2.0.so.0.4600.2 /usr/lib/netease-cloud-music/netease-cloud-music"\
    >> usr/lib/netease-cloud-music/cloud_music.sh
chmod +x usr/lib/netease-cloud-music/cloud_music.sh
rm -f usr/bin/netease-cloud-music

chmod +x usr/lib/netease-cloud-music/libcef.so
chown -R root:root .

mkdir $PKG/usr/doc/$PRGNAM-$VERSION -p
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Copy the slack-desc (and a custom doinst.sh if necessary) into ./install
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Make the package; be sure to leave it in $OUTPUT
# If package symlinks need to be created during install *before*
# your custom contents of doinst.sh runs, then add the -p switch to
# the makepkg command below -- see makepkg(8) for details
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
