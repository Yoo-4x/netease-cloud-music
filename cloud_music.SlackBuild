#!/bin/sh

# Slackware build script for cloud_music

# Copyright (c) 2016 Slackware CN Community
# All rights reserved.
#
# Authors: nnnewb <weak_ptr>, Arondight <shell_way@foxmail.com>,
#   a1ive (Gen Li, https://github.com/a1ive)
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
set -e

PRGNAM='cloud_music'
VERSION=${VERSION:-0.9.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
CWD=$(dirname $(readlink -f $0))
TMP=${TMP:-/tmp/SBo}
PKG="${TMP}/package-${PRGNAM}"
OUTPUT=${OUTPUT:-/tmp}
SOURCE=''

source "${CWD}/conf.sh"

SOURCE=$(basename $SOURCE_URL)

test -d $PKG && rm -rvf $PKG
mkdir -p $TMP $PKG $OUTPUT

cd $TMP
test -d "${PRGNAM}-${VERSION}" && rm -rvf "${PRGNAM}-${VERSION}"
# tar -zxvf $CWD/$PRGNAM-$VERSION.tar.gz

cd $PKG
ar -xvf "${CWD}/${SOURCE}"
tar -Jxvf data.tar.xz
rm -f control.tar.gz data.tar.xz debian-binary

# Patch for undefiend symbol: g_type_class_adjust_private_offset
# See https://github.com/slackwarecn/netease_cloud_music_slackbuild/issues/2 {
CUSTOM_GLIB2=$(basename $GLIB2_URL)

if [ -r "${CWD}/${CUSTOM_GLIB2}" ]; then
  CUSTOM_GLIB2_DIR='glib_new_version'
  CLOUD_MUSIC_SH='usr/lib/netease-cloud-music/cloud_music.sh'

  mkdir $CUSTOM_GLIB2_DIR
  cd $CUSTOM_GLIB2_DIR
  tar -Jxvf "$CWD/${CUSTOM_GLIB2}"
  if [ $ARCH = "x86_64" ]; then
    install -Dm0755 usr/lib64/libglib-2.0.so.0.4600.2 ../usr/lib/netease-cloud-music
    install -Dm0755 usr/lib64/libgobject-2.0.so.0.4600.2 ../usr/lib/netease-cloud-music
  else
    install -Dm0755 usr/lib/libglib-2.0.so.0.4600.2 ../usr/lib/netease-cloud-music
    install -Dm0755 usr/lib/libgobject-2.0.so.0.4600.2 ../usr/lib/netease-cloud-music
  fi
  cd ..
  rm -rvf $CUSTOM_GLIB2_DIR
  echo "#!/bin/sh" > $CLOUD_MUSIC_SH
  echo "LD_PRELOAD=libglib-2.0.so.0.4600.2:libgobject-2.0.so.0.4600.2 /usr/lib/netease-cloud-music/netease-cloud-music"\
      >> $CLOUD_MUSIC_SH
  chmod +x $CLOUD_MUSIC_SH
  rm -f usr/bin/netease-cloud-music
else
    echo "Can not extract ${CWD}/${CUSTOM_GLIB2}"
    exit -1
fi
# }

chmod +x usr/lib/netease-cloud-music/libcef.so

mkdir -p "${PKG}/usr/doc/${PRGNAM}-${VERSION}"
install -Dm0644 "${CWD}/${PRGNAM}.SlackBuild" "${PKG}/usr/doc/${PRGNAM}-${VERSION}/${PRGNAM}.SlackBuild"

# Copy the slack-desc (and a custom doinst.sh if necessary) into ./install
mkdir -p "${PKG}/install"
install -Dm0644 "${CWD}/slack-desc" "${PKG}/install/slack-desc"
install -Dm0755 "${CWD}/doinst.sh" "${PKG}/install/doinst.sh"

# Make the package; be sure to leave it in $OUTPUT
# If package symlinks need to be created during install *before*
# your custom contents of doinst.sh runs, then add the -p switch to
# the makepkg command below -- see makepkg(8) for details
cd $PKG
/sbin/makepkg -l y -c n "${OUTPUT}/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-tgz}"

